
Report: .... 


Learning rate:  0.9892939948419691

Fitness:  1.1915503734059565

Test accuracy: 0.1

CN Layers: 
----------------

Sequential(
  (0): Conv2d(1, 128, kernel_size=(2, 2), stride=(1, 1), padding=(1, 1))
  (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (2): Sigmoid()
  (3): Dropout(p=0.8150310139440442, inplace=False)
  (4): MaxPool2d(kernel_size=(2, 2), stride=(2, 2), padding=0, dilation=1, ceil_mode=False)
)
Sequential(
  (0): Conv2d(128, 128, kernel_size=(2, 2), stride=(1, 1), padding=(1, 1))
  (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (2): ReLU()
  (3): Dropout(p=0.20889489326510435, inplace=False)
)
Sequential(
  (0): Conv2d(128, 128, kernel_size=(2, 2), stride=(1, 1), padding=(1, 1))
  (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (2): Sigmoid()
  (3): MaxPool2d(kernel_size=(2, 2), stride=(2, 2), padding=0, dilation=1, ceil_mode=False)
)
Sequential(
  (0): Conv2d(128, 4, kernel_size=(2, 2), stride=(1, 1), padding=(1, 1))
  (1): BatchNorm2d(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (2): Sigmoid()
  (3): MaxPool2d(kernel_size=(2, 2), stride=(2, 2), padding=0, dilation=1, ceil_mode=False)
)
Sequential(
  (0): Conv2d(4, 8, kernel_size=(2, 2), stride=(1, 1), padding=(1, 1))
  (1): ReLU()
  (2): Dropout(p=0.6349495325671968, inplace=False)
  (3): MaxPool2d(kernel_size=(2, 2), stride=(2, 2), padding=0, dilation=1, ceil_mode=False)
)
DFC Layer: 
Sequential(
  (0): Linear(in_features=72, out_features=10, bias=True)
)